#version 400
#extension GL_EXT_geometry_shader4 : enable  

layout(triangles) in;
layout(points, max_vertices = 30) out;

uniform sampler1D g_Random;

layout(std140) uniform PerFrame
{
	mat4 projectionMatrix;
	mat4 viewMatrix;
};

layout(std140) uniform Time
{
	float g_dt;
	float g_time;
};

in vec3 gs_normal_in[];
in float gs_density_in[];
in float gs_lod_in[];

out vec3 vert_normal1;
//out vec2 vert_texcoord1;
out vec3 vert_color1;

float random(vec3 seed, int i){
     vec4 seed4 = vec4(seed, i);
     float dot_product = dot(seed4, vec4(12.9898,78.233,45.164,94.673));
     return fract(sin(dot_product) * 43758.5453);
}

vec3 GetRandomPosition(vec3 a, vec3 b, vec3 ab, vec3 ac, int i)
{
   float r = random(a, i);
   float s = random(b, i);

   if(r + s >= 1)
    {
        r = 1 - r;
        s = 1 - s;
    }
   
    return a + r*ab + s*ac;
}

void main() 
{
    
}